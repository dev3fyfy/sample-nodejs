name: Merge master into all branches


on:
  push:
    branches:
      - master



jobs:
  merge:
    runs-on: ubuntu-latest
    env:
     BRANCHES: "main,main2,main3,add-app-spec"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history for all branches
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Merge changes into other branches
        run: |
          git config user.name "dev3fyfy"
          git config user.email "dev.ahmed.afifi@gmail.com"
          conflicts=""

          pull_request_url=""
          IFS=',' read -ra BRANCHES <<< "${BRANCHES}"
          for branch in "${BRANCHES[@]}"; do
            if [ "$branch" != "master" ]; then
            
              git checkout "$branch"
              
              git merge --no-commit --no-ff --no-edit origin/master || {
                git merge --abort
                conflicts+=("$branch")
                echo "Creating pull request for $branch"
                response=$(curl --request POST \
                  --url https://api.github.com/repos/$GITHUB_REPOSITORY/pulls \
                  --header 'authorization: Bearer ${{ secrets.PERSONAL_TOKEN }}' \
                  --header 'content-type: application/json' \
                  --data '{
                    "title": "Merge master into '"$branch"' (auto) '${GITHUB_SHA::8}'",
                    "body": "There were merge conflicts when attempting to merge changes from  into this branch. Please resolve the conflicts and merge the changes manually.",
                    "head": "master",
                    "base": "'"$branch"'"
                  }')
                  
 
                PR_URL+="$(curl -H "Authorization: Bearer ${{ secrets.PERSONAL_TOKEN }}" \
                  "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls?head=master&base=$branch" \
                  | jq -r '.[0].html_url') \n   "

                

              }
              if [ -z "$(git status --porcelain)" ]; then
                git push origin "$branch"
              else
                git commit -am "Merge branch 'master' into $branch"
                git push origin "$branch"
              fi
            fi
          done
          if [ ${#conflicts[@]} -gt 0 ]; then
            echo "Merge conflicts occurred in the following branches: ${conflicts[@]} \n ${PR_URL[@]}"
            echo "PR_URL=${PR_URL}" >> $GITHUB_ENV    
          else
            echo "No merge conflicts occurred."
          fi
      - name: Send PRs  conflicts Urls  to Slack channel
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "text": "${{ env.PR_URL }} " 
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}          

