name: Merge master into all branches

on:
  push:
    branches:
      - master

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history for all branches
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Merge changes into other branches
        id: merge
        run: |
          git config user.name "dev3fyfy"
          git config user.email "dev.ahmed.afifi@gmail.com"
          conflicts=""
          for branch in $(git ls-remote --heads origin | awk -F'/' '{print $3}'); do
            if [ "$branch" != "master" ]; then
              git checkout "$branch"
              git merge --no-commit --no-ff --no-edit origin/master || {
                git merge --abort
                conflicts+=("$branch")
              }
              if [ -z "$(git status --porcelain)" ]; then
                git push origin "$branch"
              else
                git commit -am "Merge branch 'master' into $branch"
                git push origin "$branch"
              fi
            fi
          done
          if [ ${#conflicts[@]} -gt 0 ]; then
            echo "Merge conflicts occurred in the following branches: ${conflicts[@]}"
            echo "::set-output name=merge_conflicts::true"
          else
            echo "No merge conflicts occurred."
            echo "::set-output name=merge_conflicts::false"
          fi
          echo $conflicts >> $GITHUB_ENV

      - name: Create pull requests for conflicted branches
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFLICTS: ${{ env.conflicts }}
        run: |
          echo  $conflicts
          for branch in $conflicts; do
            if [ "$branch" != "master" ]; then
              echo "Creating pull request for $branch"
              curl --request POST \
                --url https://api.github.com/repos/$GITHUB_REPOSITORY/pulls \
                --header 'authorization: Bearer $GITHUB_TOKEN' \
                --header 'content-type: application/json' \
                --data '{
                  "title": "Merge master into '"$branch"' (auto)",
                  "body": "There were merge conflicts when attempting to merge changes from \`master\` into this branch. Please resolve the conflicts and merge the changes manually.",
                  "head": "master",
                  "base": "'"$branch"'"
                }'
            fi
          done
